services:
    server-app:
        build:
            context: .
            dockerfile: Dockerfile
        env_file:
            - .env
        volumes:
            - .:/app
            - /app/node_modules
        ports:
            - 5000:5000
        command: npm run start
        depends_on:
            - postgres
            - redis
        restart: always
        networks:
            - my_network

    postgres:
        container_name: postgres
        image: postgres:17.2
        restart: always
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        ports:
            - '5432:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - my_network

    redis:
        container_name: redis
        image: redis:latest
        restart: always
        ports:
            - '6379:6379'
        command: redis-server --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis_data:/data
        networks:
            - my_network

    # next-app:
    #     container_name: next-app
    #     build:
    #         context: ../client
    #         dockerfile: Dockerfile
    #     environment:
    #         - SERVER_URL=http://server-app:5000
    #     ports:
    #         # - '80:80' # порт по умолчанию для nginx
    #         - '3000:3000' # Порт, на котором будет доступно Next-приложение
    #     depends_on:
    #         - server-app
    #     networks:
    #         - my_network

volumes:
    postgres_data:
    redis_data:
networks:
    my_network:
        driver: bridge
