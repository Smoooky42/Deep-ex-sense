name: Backend CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest

    services: #Необязательно, так как данных из БД мокаются. А вот для е2е тестов уже надо было бы
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: Deep-ex-sense

    steps:
      - name: Checkout code #Клонирует код
        uses: actions/checkout@v3

      - name: Set up Node.js #Устанавливает Node.js версии 18
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies #Устанавливает зависимости проекта
        working-directory: ./server
        run: npm install --legacy-peer-deps

      - name: Set DATABASE_URL environment variable #Добавляет переменную DATABASE_URL в файл окружения $GITHUN_ENV и делает ее доступной для последующих шагах в этом же workflow
        working-directory: ./server
        run: echo "DATABASE_URL=postgresql://admin:admin@localhost:5432/Deep-ex-sense?schema=public" >> $GITHUB_ENV

      - name: Generate Prisma Client #Генерирует Prisma Client из файла схемы
        working-directory: ./server
        run: npx prisma generate

      - name: Run tests #Запускает тесты
        working-directory: ./server
        run: npm run test

      # - name: Run linter            #Запускает линтеры
      #   working-directory: ./backend
      #   run: npm run lint

      - name: Debug Environment #В случае ошибки выводит переменные окружения и содержимое текущей директории для отладки
        if: failure()
        run: |
          echo "Environment Variables:"
          printenv
          echo "Current Directory Contents:"
          ls -al

  # frontend:
  #   name: Frontend CI
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install dependencies
  #       working-directory: ./frontend
  #       run: npm install

  #     - name: Run linter
  #       working-directory: ./frontend
  #       run: npm run lint

  #     - name: Run tests
  #       working-directory: ./frontend
  #       run: npm test
